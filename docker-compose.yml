services:
  app:
    image: ghcr.io/team-alilm/algamja-be:${IMAGE_TAG:-latest}
    container_name: app
    depends_on:
      - redis
    expose:
      - "8080"
    env_file:
      - .env.app
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
    restart: always
    volumes:
      - /srv/app/logs:/var/log/algamja

  redis:
    image: redis:7-alpine
    container_name: redis
    command: >
      sh -c '
        mkdir -p /usr/local/etc/redis &&
        {
          echo "appendonly yes";
          if [ -n "$$REDIS_PASSWORD" ]; then echo "requirepass $$REDIS_PASSWORD"; fi
          echo "bind 0.0.0.0";           # 외부접속 허용
          echo "protected-mode yes";     # 보호모드 유지
        } > /usr/local/etc/redis/redis.conf &&
        exec redis-server /usr/local/etc/redis/redis.conf
      '
    env_file:
      - .env.app
    volumes:
      - /srv/redis/data:/data
    ports:
      - "6379:6379"   # 외부에서도 접근 필요 시
    restart: always

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    restart: always

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: sh
    command: -c "trap exit TERM; while :; do sleep 12h & wait $!; certbot renew --webroot -w /var/www/certbot --deploy-hook 'nginx -s reload'; done"