# ===================================
# LOCAL 개발 환경 설정
# ===================================

api:
  server-url: http://localhost:8080

spring:
  # 데이터베이스 설정
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:appdb}?useSSL=false&allowPublicKeyRetrieval=true&characterEncoding=UTF-8&serverTimezone=Asia/Seoul&rewriteBatchedStatements=true
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${DB_USERNAME:user}
    password: ${DB_PASSWORD:password}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
      validation-timeout: 3000
      leak-detection-threshold: 60000
          
  # Redis 설정
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:password123}
      timeout: 2000ms
      database: 0
      lettuce:
        pool:
          max-active: 8
          max-wait: -1ms
          max-idle: 8
          min-idle: 0

  # Flyway 개발 설정
  flyway:
    enabled: true
    baseline-on-migrate: true
    clean-disabled: false
    validate-on-migrate: true
    out-of-order: false

  # OAuth2 설정
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-name: Kakao
            client-id: ENC(eNKiMXAG3vf/L7Xvgu1eu4nxbu0r1tt02WjWIWyWFBQyN9AGAB7x/bN9t9uQAckm)
            client-secret: ENC(iRjZnKtYJK7ToWDLTt0k8hC4Yg+fMvIf+2A+mk1A674NejBzJkdnphCb6kkgTR4I)
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope:
              - profile_nickname
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  # 비동기 태스크 설정
  task:
    execution:
      pool:
        core-size: 4
        max-size: 8
        queue-capacity: 200
      thread-name-prefix: algamja-task-

  # JWT 설정
  jwt:
    secretKey: ENC(xorjoiJeOmHgf/KnMkve2p5bqLOXkT61EN4/7KjLj+n8MUO83PX8DGwdJg640uxAA9LNtAw13as=)

  # 메일 설정
  mail:
    username: ENC(Un6kMlz7KgcKF/5VNA3QaOhbWGyEEpxWakkgs4pCxpY=)
    password: ENC(pk5bOpJBJUcImQg0uUyQonNMvHB/V2OOKHDzGOsQnxU=)
    host: smtp.gmail.com
    port: 587
    protocol: smtp
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000

# 암호화 설정
jasypt:
  encryptor:
    algorithm: ${JASYPT_ALGORITHM:PBEWithMD5AndDES}
    password: ${JASYPT_PASSWORD:test-password}

# 개발 서버 설정
server:
  port: ${SERVER_PORT:8080}
  tomcat:
    threads:
      max: 50
      min-spare: 10
    accept-count: 100
    max-connections: 200
  error:
    include-exception: true
    include-stacktrace: always
    include-message: always

# 개발 환경 관리 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,beans,env,configprops,mappings,scheduledtasks
      cors:
        allowed-origins: "http://localhost:3000"
        allowed-methods: GET,POST
  endpoint:
    health:
      show-details: always
      show-components: always

# Swagger 개발 설정
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: method
    tags-sorter: alpha

# 로깅 설정은 logback-spring.xml에서 관리
# (프로파일별 다른 설정, 비동기 로깅, 압축 롤링 등 고급 기능 활용)

# 애플리케이션 설정
app:
  base-url: ${FRONTEND_URL:http://localhost:3000}

# 웹훅 설정  
webhook:
  slack:
    url: ENC(YijqXtKSR+hmi4rktbHRSWMIdUEDp2tF8oAW5nr7lAumQKrK0+4W8iDVtCk7sJOToMhj2vNCuC+Ylw1A0nV8jOW9dgnzc+5+xuxyx+rhkMvZisBfY8WXr/78avU4htho)